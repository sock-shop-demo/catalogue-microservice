name: ci

on:
  push:
    branches:
      - "main"

jobs:
  test_build:
    defaults:
      run:
        working-directory: go/src/github.com/sock-shop-demo/catalogue-microservice
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.sha }}
      STAGING_KUBERNETES_KUBECONFIG: ${{ secrets.STAGING_KUBERNETES_KUBECONFIG }}
      PRODU_KUBERNETES_KUBECONFIG: ${{ secrets.PRODU_KUBERNETES_KUBECONFIG }}
      REPO: catalogue
      GO_VERSION: 1.7.5
      GOPATH: /home/runner/work/catalogue/catalogue/go

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: go/src/github.com/sock-shop-demo/catalogue-microservice

      - uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup PATH
        run: echo "${GOPATH}/bin" >> $GITHUB_PATH

      - name: Setup PATH
        run: echo $GITHUB_PATH

      - name: Install dependencies
        run: go get -u github.com/FiloSottile/gvt && gvt restore && go get -v github.com/mattn/goveralls

      - name: Unit Test
        run: ./test/test.sh
        
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: /home/runner/work/catalogue-microservice/catalogue-microservice/go/src/github.com/sock-shop-demo/catalogue-microservice/coverage.out

      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true

      - name: Build
        run: ./scripts/build.sh

      - name: Push catalogue to Docker Hub
        run: | 
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASS }}
          docker push lautibringas/catalogue

  sonarCloudTrigger:
    needs: test_build
    name: SonarCloud Trigger
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@master
      - name: Download code coverage results
        uses: actions/download-artifact@v1
        with:
          name: code-coverage-report
          path: bin
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
  
  deploy_production:
    needs: test_build
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.sha }}
      STAGING_KUBERNETES_KUBECONFIG: ${{ secrets.STAGING_KUBERNETES_KUBECONFIG }}
      PRODU_KUBERNETES_KUBECONFIG: ${{ secrets.PRODU_KUBERNETES_KUBECONFIG }}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
    
      - name: Get kubectl
        uses: azure/setup-kubectl@v1
    
      - name: Deploy to production
        run: ./deploy/deploy_staging.sh
  
  integration_test:
    needs: deploy_production
    runs-on: ubuntu-latest
    env:
      CYPRESS_baseUrl: http://${{secrets.PRODU_CLUSTER_IP}}/
    steps:
      - uses: actions/checkout@v2
      - run: sleep 20

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: test/e2e-tests-socks
      
      - name: Archive cypress result
        uses: actions/upload-artifact@v1
        with:
          name: cypress-result
          path: test/e2e-tests-socks/cypress/videos/general.spec.js.mp4